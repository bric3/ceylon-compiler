package com.redhat.ceylon.compiler.java.test.structure.reified;

public interface TestInterface<Key, Value> {
}
public interface TestInterface2<Key, Value> {
}
public class TestClass<Key, Value> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface<Key, .ceylon.language.Integer> {
    
    public TestClass(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Key, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value) {
        this.$reified$Key = $reified$Key;
        this.$reified$Value = $reified$Value;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Key;
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value;
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.structure.reified.TestClass(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.TestClass.class, $reified$Key, $reified$Value);
    }
}
final class test_ {
    
    private test_() {
    }
    
    static <Key, Value>void test(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Key, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value, final .java.lang.Object obj) {
        .java.lang.Object obj$1;
        if ((obj$1 = obj) instanceof .com.redhat.ceylon.compiler.java.test.structure.reified.TestClass && .com.redhat.ceylon.compiler.java.Util.isReified(obj$1, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.TestClass.class, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$))) {
            final .com.redhat.ceylon.compiler.java.test.structure.reified.TestClass<.ceylon.language.String, .ceylon.language.Integer> obj$2 = (.com.redhat.ceylon.compiler.java.test.structure.reified.TestClass)obj$1;
        }
        .java.lang.Object obj$4;
        if ((obj$4 = obj) instanceof .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface && .com.redhat.ceylon.compiler.java.Util.isReified(obj$4, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface.class, .ceylon.language.String.$TypeDescriptor$, $reified$Value))) {
            final .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface<.ceylon.language.String, Value> obj$5 = (.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface)obj$4;
        }
        .java.lang.Object obj$7;
        if (.com.redhat.ceylon.compiler.java.Util.isReified(obj$7 = obj, $reified$Key)) {
            final Key obj$8 = (Key)obj$7;
        }
        final Key objOrNot = (Key).ceylon.language.nothing_.get_();
        .java.lang.Object objOrNot$10;
        if ((objOrNot$10 = objOrNot) != null) {
            final Key objOrNot$11 = (Key)objOrNot$10;
        }
        .java.lang.Object objOrNot$13;
        if ((objOrNot$13 = objOrNot) != null || objOrNot$13 instanceof .ceylon.language.Integer) {
            final Key objOrNot$14 = (Key)objOrNot$13;
        }
        .java.lang.Object fu$16;
        if ((fu$16 = objOrNot) != null) {
            final Key fu$17 = (Key)fu$16;
        }
        final boolean b = (
            let
            {
                .java.lang.Object $ceylontmp$18 = objOrNot;
            }
            returning $ceylontmp$18 != null;
        );
        {
            .java.lang.Object sel$19 = objOrNot;
            if (sel$19 != null) {
                final Key objOrNot$20 = (Key)sel$19;
            } else {
            }
        }
        .java.lang.Object obj$22;
        if ((obj$22 = obj) instanceof .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface2) {
            final .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface2<? extends .java.lang.Object, ? extends .java.lang.Object> obj$23 = (.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface2)obj$22;
        }
        .java.lang.Object obj$25;
        if ((obj$25 = obj) instanceof .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface && .com.redhat.ceylon.compiler.java.Util.isReified(obj$25, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface.class, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Anything.$TypeDescriptor$))) {
            final .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface<.java.lang.Object, .java.lang.Object> obj$26 = (.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface)obj$25;
        }
        .java.lang.Object obj$28;
        if ((obj$28 = obj) instanceof .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface && .com.redhat.ceylon.compiler.java.Util.isReified(obj$28, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface.class, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$))) {
            final .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface<.java.lang.Object, .ceylon.language.Integer> obj$29 = (.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface)obj$28;
        }
        .java.lang.Object obj$31;
        if ((obj$31 = obj) instanceof .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface && .com.redhat.ceylon.compiler.java.Util.isReified(obj$31, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface.class, new .com.redhat.ceylon.compiler.java.metadata.Variance[]{
                .com.redhat.ceylon.compiler.java.metadata.Variance.OUT,
                .com.redhat.ceylon.compiler.java.metadata.Variance.IN}, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$))) {
            final .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface<? extends .java.lang.Object, ? super .ceylon.language.Integer> obj$32 = (.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface)obj$31;
        }
        .java.lang.Object obj$34;
        if ((obj$34 = obj) instanceof .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface && .com.redhat.ceylon.compiler.java.Util.isReified(obj$34, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface.class, new .com.redhat.ceylon.compiler.java.metadata.Variance[]{
                .com.redhat.ceylon.compiler.java.metadata.Variance.OUT,
                .com.redhat.ceylon.compiler.java.metadata.Variance.NONE}, .ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Integer.$TypeDescriptor$))) {
            final .com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface<? extends .java.lang.Object, .ceylon.language.Integer> obj$35 = (.com.redhat.ceylon.compiler.java.test.structure.reified.TestInterface)obj$34;
        }
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 7)
@.com.redhat.ceylon.compiler.java.metadata.Method
public final class first_ {
    
    private first_() {
    }
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.Annotations({@.com.redhat.ceylon.compiler.java.metadata.Annotation("shared")})
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Anything")
    @.com.redhat.ceylon.compiler.java.metadata.TypeParameters({
            @.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
                    value = "Value",
                    variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE,
                    satisfies = {},
                    caseTypes = {}),
            @.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
                    value = "Absent",
                    variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE,
                    satisfies = {"ceylon.language::Null"},
                    caseTypes = {})})
    public static <Value, Absent>void first(@.com.redhat.ceylon.compiler.java.metadata.Ignore
    final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Value, @.com.redhat.ceylon.compiler.java.metadata.Ignore
    final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Absent) {
        final Value first = (Value).ceylon.language.nothing_.get_();
        if (.com.redhat.ceylon.compiler.java.Util.isReified(first, $reified$Absent) || .com.redhat.ceylon.compiler.java.Util.isReified(first, $reified$Value)) {
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Absent|Value first"));
        }
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.structure.reified.first_.first(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
}