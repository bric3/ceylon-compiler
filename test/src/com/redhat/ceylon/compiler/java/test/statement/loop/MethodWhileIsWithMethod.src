package com.redhat.ceylon.compiler.java.test.statement.loop;

class MethodWhileIsWithMethod implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    MethodWhileIsWithMethod() {
    }
    
    private final .com.redhat.ceylon.compiler.java.test.statement.loop.Foo give$priv$() {
        return new .com.redhat.ceylon.compiler.java.test.statement.loop.FooSub();
    }
    
    public final void m() {
        loop_0: while (true) {
            .java.lang.Object y$0;
            if ((y$0 = give$priv$()) instanceof .com.redhat.ceylon.compiler.java.test.statement.loop.FooSub) {
                final .com.redhat.ceylon.compiler.java.test.statement.loop.FooSub y$1 = (.com.redhat.ceylon.compiler.java.test.statement.loop.FooSub)y$0;
                y$1.foo();
            } else {
                break loop_0;
            }
        }
        loop_1: while (true) {
            .java.lang.Object y$2;
            if ((y$2 = give$priv$()) == null) {
                final .java.lang.Object y$3 = y$2;
            } else {
                break loop_1;
            }
        }
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.statement.loop.MethodWhileIsWithMethod();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.statement.loop.MethodWhileIsWithMethod.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.loop.MethodWhileIsWithMethod.class);
}